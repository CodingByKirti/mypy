import pandas as pd

def normalize_bpcc_and_billing_entities(main_df, last_month_df):
    # Create cleaned versions of BPCC for both dataframes
    main_df['BPCC_clean'] = main_df['Business Partner Cost Center'].astype(str).str.strip().str.lstrip('0')
    last_month_df['BPCC_clean'] = last_month_df['Business Partner Cost Center'].astype(str).str.strip().str.lstrip('0')

    # Clean Billing Entity too
    main_df['Billing_clean'] = main_df['Billing Entity'].astype(str).str.strip()
    last_month_df['Billing_clean'] = last_month_df['Billing Entity'].astype(str).str.strip()

    # Create combo column (except BPCCs starting with '9')
    main_df['BPCC_combo'] = main_df.apply(
        lambda row: "" if row['BPCC_clean'].startswith('9') else f"{row['BPCC_clean']}|{row['Billing_clean']}", axis=1)
    last_month_df['BPCC_combo'] = last_month_df.apply(
        lambda row: "" if row['BPCC_clean'].startswith('9') else f"{row['BPCC_clean']}|{row['Billing_clean']}", axis=1)

    # Create lookup maps
    combo_lookup = dict(zip(last_month_df['BPCC_combo'], last_month_df['Billing_clean']))
    bpcc_lookup = dict(zip(last_month_df['BPCC_clean'], last_month_df['Billing_clean']))

    if 'Comment' not in main_df.columns:
        main_df['Comment'] = ""

    for idx, row in main_df.iterrows():
        combo = row['BPCC_combo']
        bpcc = row['BPCC_clean']
        curr_billing = row['Billing_clean']
        
        if combo and combo in combo_lookup:
            continue  # Combo found, nothing to do
        
        elif combo and bpcc in bpcc_lookup:
            # BPCC exists, but combo does not match – mismatch
            old_billing = curr_billing
            new_billing = bpcc_lookup[bpcc]

            if old_billing != new_billing:
                main_df.at[idx, 'Billing Entity'] = new_billing
                main_df.at[idx, 'Comment'] = f"Mismatch in Billing Entity. Updated from {old_billing} to {new_billing}."
        
        elif combo:  # combo exists but BPCC not found at all in last_month_df
            main_df.at[idx, 'Comment'] = "New BPCC found – no match in last month data."

    # Drop temporary columns
    main_df.drop(columns=['BPCC_clean', 'Billing_clean', 'BPCC_combo'], inplace=True)
    return main_df