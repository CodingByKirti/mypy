import pandas as pd

# Assuming `master_df`, `mom_gha_df`, and `mom_open_pos_df` are already loaded as DataFrames

# Ensure IDs are strings for consistent comparison
master_df['Position ID'] = master_df['Position ID'].astype(str)
master_df['Employee ID'] = master_df['Employee ID'].astype(str)
mom_gha_df['Position ID'] = mom_gha_df['Position ID'].astype(str)
mom_gha_df['Employee ID'] = mom_gha_df['Employee ID'].astype(str)
mom_open_pos_df['Position ID'] = mom_open_pos_df['Position ID'].astype(str)

# Step 1: Identify new records in `mom_gha_df` that are not in `master_df`
new_gha_records = mom_gha_df[~mom_gha_df.set_index(['Position ID', 'Employee ID']).index.isin(
    master_df.set_index(['Position ID', 'Employee ID']).index
)]

# Step 2: Identify new records in `mom_open_pos_df` that are not in `master_df` (considering only Position ID)
new_open_pos_records = mom_open_pos_df[~mom_open_pos_df['Position ID'].isin(master_df['Position ID'])]

# Combine new records
new_records_df = pd.concat([new_gha_records, new_open_pos_records], ignore_index=True)

# Step 3: Append new records to master_df
master_df = pd.concat([master_df, new_records_df], ignore_index=True)

# Step 4: Write master and new records to Excel
output_file = "updated_master_with_new_records.xlsx"
with pd.ExcelWriter(output_file) as writer:
    master_df.to_excel(writer, sheet_name="Master Updated", index=False)
    new_records_df.to_excel(writer, sheet_name="New Records", index=False)

print("Updated master file and new records saved in:", output_file)

# MoM tracking will be performed here for the updated master_df after each month's data is added.
# Additional processing would be required to track and mark changes month-over-month.