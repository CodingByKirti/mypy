Automation Initiatives (Non-BAU):

GSC recharge base file creation – Under UAT (16-Apr-2025)

Anaplan report split by region/country – In Progress (23-Apr-2025)

Global Role mapping input prep – Planned (30-Apr-2025)

Billing data validation (Phase 2) – Upcoming (15-May-2025)

Appian data processing for hiring review – Planned (20-May-2025)

Anaplan report split by region/country (incl. GSC sites) – Target: 23-Apr-2025

Data extraction and structuring for Global Role mapping input – Target: 30-Apr-2025

Base file creation for GSC recharges (billing input collection) – Target: 16-Apr-2025

Phase 2: Review & validation of billing data from SPOCs – Target: 15-May-2025

Processing Appian and other files to generate hiring review inputs – Target: 20-May-2025


Sub FilterDataByRegionFromFileName()
    Dim folderPath As String
    Dim fileName As String
    Dim wb As Workbook
    Dim wsData As Worksheet
    Dim region As String
    Dim lastRow As Long
    Dim regionCol As Long
    
    ' Ask user to select the folder where the files are saved
    With Application.FileDialog(msoFileDialogFolderPicker)
        .Title = "Select folder with region workbooks"
        If .Show <> -1 Then Exit Sub
        folderPath = .SelectedItems(1) & "\"
    End With

    Application.ScreenUpdating = False
    Application.DisplayAlerts = False

    ' Loop through all xlsx files in the folder
    fileName = Dir(folderPath & "*.xlsx")
    Do While fileName <> ""
        ' Open the workbook
        Set wb = Workbooks.Open(folderPath & fileName)
        
        ' Extract region name from file name (remove .xlsx)
        region = Replace(fileName, ".xlsx", "")
        
        ' Set reference to Data sheet
        On Error Resume Next
        Set wsData = wb.Sheets("Data")
        On Error GoTo 0

        If Not wsData Is Nothing Then
            With wsData
                ' Get the column number of BT
                regionCol = .Range("BT1").Column
                lastRow = .Cells(.Rows.Count, regionCol).End(xlUp).Row

                ' Apply AutoFilter on row 2 (assuming row 1 is headers, row 2 starts data)
                .AutoFilterMode = False
                .Rows("1").AutoFilter Field:=regionCol, Criteria1:="<>" & region

                ' Delete visible rows that do not match region (excluding header row)
                On Error Resume Next
                .Range("A2:A" & lastRow).SpecialCells(xlCellTypeVisible).EntireRow.Delete
                On Error GoTo 0

                .AutoFilterMode = False
            End With
        End If

        ' Refresh all data connections if any
        On Error Resume Next
        wb.RefreshAll
        On Error GoTo 0

        ' Save and close the workbook
        wb.Close SaveChanges:=True

        ' Move to next file
        fileName = Dir
    Loop

    Application.DisplayAlerts = True
    Application.ScreenUpdating = True

    MsgBox "✅ Region-based row filtering complete for all files.", vbInformation
End Sub
-----------------------
You want to replicate the Excel formula:

`=RIGHT(TEXT([column_name], "0000000000"), 10)`

in Python.

Here's the equivalent Python code:

```
import pandas as pd

assuming 'df' is your DataFrame and 'column_name' is the column you want to process

df['new_column'] = df['column_name'].apply(lambda x: str(x).zfill(10)[-10:])
```

Explanation:

1. `str(x).zfill(10)` pads the value with leading zeros to a minimum length of 10 characters.
2. `[-10:]` extracts the last 10 characters from the padded string.

This code creates a new column 'new_column' with the processed values.
Sub UpdateL4SummaryDropdown()
    Dim wb As Workbook
    Dim wsOptions As Worksheet, wsL4Summary As Worksheet
    Dim folderPath As String, filePath As String
    Dim fso As Object, file As Object
    Dim lastRow As Long
    Dim rng As Range
    Dim dvRange As Range
    
    ' Disable screen updating for better performance
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    Application.EnableEvents = False

    ' Set folder path
    folderPath = ThisWorkbook.Path & "\Filtered_Files\"

    ' Create File System Object
    Set fso = CreateObject("Scripting.FileSystemObject")

    ' Ensure folder exists
    If Not fso.FolderExists(folderPath) Then
        MsgBox "Filtered_Files folder not found!", vbExclamation, "Error"
        Exit Sub
    End If

    ' Loop through each file in the folder
    For Each file In fso.GetFolder(folderPath).Files
        If LCase(Right(file.Name, 5)) = ".xlsx" Then
            ' Open the workbook
            Set wb = Workbooks.Open(file.Path)

            ' Set worksheet references
            On Error Resume Next
            Set wsOptions = wb.Sheets("Options")
            Set wsL4Summary = wb.Sheets("L4 Summary")
            On Error GoTo 0

            ' Skip if any sheet is missing
            If wsOptions Is Nothing Or wsL4Summary Is Nothing Then
                MsgBox "Missing required sheets in: " & wb.Name, vbExclamation, "Skipping"
                wb.Close False
                GoTo NextFile
            End If

            ' ---- GET L4 VALUES FROM OPTIONS SHEET ----
            lastRow = wsOptions.Cells(wsOptions.Rows.Count, "B").End(xlUp).Row

            ' If no values exist, clear the dropdown and continue
            If lastRow < 3 Then
                wsL4Summary.Range("B1").Validation.Delete
                wb.Save
                wb.Close False
                GoTo NextFile
            End If

            ' Define range for dropdown values (B3 to last value in B)
            Set rng = wsOptions.Range("B3:B" & lastRow)

            ' ---- UPDATE DROPDOWN IN L4 SUMMARY ----
            With wsL4Summary.Range("B1").Validation
                .Delete ' Remove old dropdown
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, _
                     Operator:=xlBetween, Formula1:="=" & wsOptions.Name & "!" & rng.Address
                .IgnoreBlank = True
                .InCellDropdown = True
                .ShowInput = False
                .ShowError = False
            End With

            ' Save & close
            wb.Save
            wb.Close False

NextFile:
        End If
    Next file

    ' Restore application settings
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
    Application.EnableEvents = True

    ' Cleanup
    Set fso = Nothing

    MsgBox "L4 Summary dropdown updated in all files!", vbInformation, "Done"

End Sub


Sub FilterAndCleanFiles()
    Dim SaveFolder As String, FileName As String
    Dim wb As Workbook, ws As Worksheet
    Dim lastRow As Long
    Dim rng As Range, colG As Range
    Dim L3 As String

    ' Disable alerts, screen updating
    Application.DisplayAlerts = False
    Application.ScreenUpdating = False

    ' Set the folder where files were saved
    SaveFolder = ThisWorkbook.Path & "\Filtered_Files\"

    ' Loop through each file in the folder
    FileName = Dir(SaveFolder & "*.xlsx")
    
    Do While FileName <> ""
        ' Open the workbook
        Set wb = Workbooks.Open(SaveFolder & FileName)
        
        ' Get L3 name from filename (remove ".xlsx")
        L3 = Replace(FileName, ".xlsx", "")
        
        ' Set reference to Data sheet
        On Error Resume Next
        Set ws = wb.Sheets("Data")
        On Error GoTo 0
        
        If Not ws Is Nothing Then
            ' Get last row in column G
            lastRow = ws.Cells(ws.Rows.Count, "G").End(xlUp).Row
            
            ' Apply AutoFilter on row 2
            ws.Rows("2:2").AutoFilter Field:=7, Criteria1:="<>" & L3
            
            ' Delete visible rows (except header)
            If lastRow > 2 Then
                Set rng = ws.Range("A3:A" & lastRow).SpecialCells(xlCellTypeVisible).EntireRow
                rng.Delete
            End If
            
            ' Turn off AutoFilter
            ws.AutoFilterMode = False
            
            ' Refresh all data connections
            wb.RefreshAll
        End If
        
        ' Save and close the workbook
        wb.Save
        wb.Close False
        
        ' Move to next file
        FileName = Dir
    Loop

    ' Re-enable alerts and screen updating
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True

    MsgBox "Filtering completed successfully!", vbInformation, "Done"
End Sub
