import pandas as pd

def track_changes(master_df, monthly_files, gha_change_cols, open_pos_change_cols):
    # Create DataFrames for new and changed records
    new_records_df = pd.DataFrame(columns=master_df.columns)
    changes_df = pd.DataFrame(columns=master_df.columns)

    # Iterate through monthly files
    for i in range(len(monthly_files) - 1):
        # Read current and next month's files
        curr_month_file = pd.read_excel(monthly_files[i])
        next_month_file = pd.read_excel(monthly_files[i + 1])

        # Split GHA and Open Position files
        curr_gha = curr_month_file[curr_month_file['Source Type'] == 'GHA']
        curr_open_pos = curr_month_file[curr_month_file['Source Type'] == 'Open Position']

        next_gha = next_month_file[next_month_file['Source Type'] == 'GHA']
        next_open_pos = next_month_file[next_month_file['Source Type'] == 'Open Position']

        # **Process GHA**
        # Find new records
        new_gha = next_gha[~next_gha[['Position ID', 'Employee ID']].apply(tuple, axis=1)
                           .isin(curr_gha[['Position ID', 'Employee ID']].apply(tuple, axis=1))]
        new_records_df = pd.concat([new_records_df, new_gha])

        # Find changed records
        merged_gha = pd.merge(curr_gha, next_gha, on=['Position ID', 'Employee ID'], suffixes=('_curr', '_next'))
        for col in gha_change_cols:
            changes_gha = merged_gha[merged_gha[f'{col}_curr'] != merged_gha[f'{col}_next']]
            changes_df = pd.concat([changes_df, changes_gha])

        # **Process Open Position**
        # Find new records
        new_open_pos = next_open_pos[~next_open_pos['Position ID'].isin(curr_open_pos['Position ID'])]
        new_records_df = pd.concat([new_records_df, new_open_pos])

        # Find changed records
        merged_open_pos = pd.merge(curr_open_pos, next_open_pos, on=['Position ID'], suffixes=('_curr', '_next'))
        for col in open_pos_change_cols:
            changes_open_pos = merged_open_pos[merged_open_pos[f'{col}_curr'] != merged_open_pos[f'{col}_next']]
            changes_df = pd.concat([changes_df, changes_open_pos])

    # Combine results back into the master DataFrame
    master_df = pd.concat([master_df, new_records_df, changes_df]).drop_duplicates()

    return master_df, new_records_df, changes_df


# **Example Usage**
master_file_path = 'master_file.xlsx'
monthly_files = ['Feb24_gha_open.xlsx', 'Mar24_gha_open.xlsx']

# Define change columns for GHA and Open Position
gha_change_cols = ['Column1', 'Column2', 'Column3']  # Columns to track changes for GHA
open_pos_change_cols = ['Column1', 'Column2', 'Column3']  # Columns to track changes for Open Position

# Load master DataFrame
master_df = pd.read_excel(master_file_path)

# Track changes and new records
master_df, new_records_df, changes_df = track_changes(master_df, monthly_files, gha_change_cols, open_pos_change_cols)

# Save results to Excel
with pd.ExcelWriter('output.xlsx', engine='openpyxl') as writer:
    master_df.to_excel(writer, sheet_name='Master', index=False)
    new_records_df.to_excel(writer, sheet_name='New Records', index=False)
    changes_df.to_excel(writer, sheet_name='Changed Records', index=False)