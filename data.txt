------------------------
Sub SplitWorkbook()
    Dim wb As Workbook, newWb As Workbook
    Dim wsData As Worksheet, wsL3 As Worksheet, wsL4 As Worksheet, wsReg As Worksheet, wsOptions As Worksheet
    Dim lastRowL3 As Integer, lastRowReg As Integer
    Dim i As Integer, j As Integer
    Dim L3Value As String, RegionValue As String
    Dim FileName As String
    Dim FolderPath As String
    
    ' Set worksheets
    Set wb = ThisWorkbook
    Set wsData = wb.Sheets("Data")
    Set wsL3 = wb.Sheets("L3 Summary")
    Set wsL4 = wb.Sheets("L4 Summary")
    Set wsReg = wb.Sheets("Reg Summary")
    Set wsOptions = wb.Sheets("Options")

    ' Get last row for L3 and Region in Options tab
    lastRowL3 = wsOptions.Cells(wsOptions.Rows.Count, "A").End(xlUp).Row ' L3 values in Col A
    lastRowReg = wsOptions.Cells(wsOptions.Rows.Count, "G").End(xlUp).Row ' Region values in Col G

    ' Get the folder where the current file is saved
    FolderPath = wb.Path & "\"
    
    ' ----- SPLIT BY L3 -----
    For i = 2 To lastRowL3 ' Start from second row (skipping '*')
        L3Value = wsOptions.Cells(i, 1).Value ' Get L3 value
        
        If L3Value <> "*" And L3Value <> "" Then
            ' Filter L3 Summary to select L3Value
            wsL3.Range("B1").Value = L3Value ' Select the value
            
            ' Wait for formulas to update
            Application.Calculate

            ' Create new workbook
            Set newWb = Workbooks.Add
            
            ' Copy sheets to new workbook
            wb.Sheets(Array("Readme", "L3 Summary", "L4 Summary", "Data")).Copy Before:=newWb.Sheets(1)
            
            ' Delete extra sheets created in new workbook
            Dim ws As Worksheet
            For Each ws In newWb.Sheets
                If ws.Name Like "Sheet*" Then Application.DisplayAlerts = False: ws.Delete: Application.DisplayAlerts = True
            Next ws
            
            ' Filter Data Sheet to keep only relevant data
            With newWb.Sheets("Data")
                If .AutoFilterMode Then .ShowAllData ' Reset filter
                .Range("A1").AutoFilter Field:=4, Criteria1:=L3Value ' Filter column D (L3)
                .UsedRange.Copy
                .Cells.ClearContents
                .Range("A1").PasteSpecial Paste:=xlPasteValues
                Application.CutCopyMode = False
            End With
            
            ' Remove irrelevant L4 options
            With newWb.Sheets("L4 Summary")
                If .AutoFilterMode Then .ShowAllData
                .Range("D:D").AutoFilter Field:=1, Criteria1:=L3Value ' Keep only related L4s
            End With
            
            ' Set filename and remove invalid characters
            FileName = FolderPath & "Split_L3_" & Replace(Replace(L3Value, "/", "_"), "\", "_") & ".xlsx"
            
            ' Save and close
            newWb.SaveAs FileName, FileFormat:=xlOpenXMLWorkbook
            newWb.Close False
        End If
    Next i

    ' ----- SPLIT BY REGION -----
    For j = 2 To lastRowReg ' Start from second row (skipping '*')
        RegionValue = wsOptions.Cells(j, 7).Value ' Get Region value
        
        If RegionValue <> "*" And RegionValue <> "" Then
            ' Select Region in Reg Summary
            wsReg.Range("B1").Value = RegionValue
            
            ' Wait for formulas to update
            Application.Calculate

            ' Create new workbook
            Set newWb = Workbooks.Add
            
            ' Copy sheets to new workbook
            wb.Sheets(Array("Readme", "Reg Summary", "Data")).Copy Before:=newWb.Sheets(1)
            
            ' Delete extra sheets created in new workbook
            For Each ws In newWb.Sheets
                If ws.Name Like "Sheet*" Then Application.DisplayAlerts = False: ws.Delete: Application.DisplayAlerts = True
            Next ws
            
            ' Filter Data Sheet to keep only relevant data
            With newWb.Sheets("Data")
                If .AutoFilterMode Then .ShowAllData ' Reset filter
                .Range("G:G").AutoFilter Field:=1, Criteria1:=RegionValue ' Filter column G (Region)
                .UsedRange.Copy
                .Cells.ClearContents
                .Range("A1").PasteSpecial Paste:=xlPasteValues
                Application.CutCopyMode = False
            End With
            
            ' Set filename and remove invalid characters
            FileName = FolderPath & "Split_Region_" & Replace(Replace(RegionValue, "/", "_"), "\", "_") & ".xlsx"
            
            ' Save and close
            newWb.SaveAs FileName, FileFormat:=xlOpenXMLWorkbook
            newWb.Close False
        End If
    Next j

    ' Reset autofilters
    If wsData.AutoFilterMode Then wsData.ShowAllData
    If wsL3.AutoFilterMode Then wsL3.ShowAllData
    If wsL4.AutoFilterMode Then wsL4.ShowAllData
    If wsReg.AutoFilterMode Then wsReg.ShowAllData
    
    MsgBox "Workbook split successfully!", vbInformation, "Done"
End Sub
---------------------------










Subject: Follow-up: Alteryx Implementation Use Cases

Dear [Leads' Names],

Following up on the trailing discussion regarding Alteryx implementation, we need to identify specific use cases within your teams where Alteryx can add value. I have not received any inputs yet, so please consider this a gentle reminder to review and share your insights.

To ensure alignment, kindly fill in the attached template and send it by the end of this week. This will help us move forward efficiently.

Your inputs are important in making this implementation successful. Appreciate your cooperation.

Best regards,
[Your Name]
